<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DotnetCore on Li&#39;Blog</title>
    <link>https://github.com/oneweek20169902/oneweek20169902.github.io.git/categories/dotnetcore.html</link>
    <description>Recent content in DotnetCore on Li&#39;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 07 May 2019 16:48:38 +0800</lastBuildDate>
    
	<atom:link href="https://github.com/oneweek20169902/oneweek20169902.github.io.git/categories/dotnetcore/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Httpclient请求卡顿的解决方法</title>
      <link>https://github.com/oneweek20169902/oneweek20169902.github.io.git/post/httpclient%E8%AF%B7%E6%B1%82%E5%8D%A1%E9%A1%BF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</link>
      <pubDate>Tue, 07 May 2019 16:48:38 +0800</pubDate>
      
      <guid>https://github.com/oneweek20169902/oneweek20169902.github.io.git/post/httpclient%E8%AF%B7%E6%B1%82%E5%8D%A1%E9%A1%BF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</guid>
      <description>var handler = new HttpClientHandler() { AutomaticDecompression = DecompressionMethods.GZip,UseProxy = false }; using (var http = new HttpClient( handler )) { if (headers != null) { foreach (KeyValuePair&amp;lt;string,string&amp;gt; header in headers) { http.DefaultRequestHeaders.Add( header.Key,header.Value ); } } if (timeout &amp;gt; 0) { http.Timeout = new TimeSpan( 0,0,timeout ); } var response = http.GetAsync( address ); if (!response.Result.IsSuccessStatusCode) { return new FunctionResult&amp;lt;TData&amp;gt;() { Code = ApiStatusCode.ServerError,Message = &amp;#34;&amp;#34; }; } var json = response.</description>
    </item>
    
  </channel>
</rss>